@use '../../styles/variables' as v;
@use '../../styles/mixins' as m;
@use 'sass:color';

.hero {
  min-height: 100vh;
  position: relative;
  overflow: hidden;
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.9),
    rgba(0, 0, 0, 0.7)
  );
  touch-action: pan-y; // Enable vertical scrolling on mobile
  
  @include m.respond-to(mobile) {
    min-height: -webkit-fill-available; // Fix for mobile Safari
  }
}

.heroBackground {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  z-index: 1;
  
  canvas {
    position: absolute !important;
    top: 0;
    left: 0;
    outline: none;
  }
}

.heroName {
  position: absolute;
  top: 80px;
  left: 1rem;
  z-index: 2;
  perspective: 1000px;
  
  @include m.respond-to(mobile) {
    left: 50%;
    transform: translateX(-50%);
    width: 90%;
    text-align: center;
    top: 60px;
    padding: 0 1rem;
  }
}

.firstName, .middleName, .lastName {
  font-family: v.$font-heading;
  font-size: 8rem;
  font-weight: bold;
  line-height: 1;
  color: v.$color-primary;
  display: block;
  transform-origin: center left;
  text-shadow: 0 0 30px rgba(v.$color-primary, 0.3);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  
  @include m.respond-to(mobile) {
    font-size: 2.5rem;
    position: relative;
    display: block;
    left: auto;
    top: auto;
    transform-origin: center;
    margin-bottom: 0.5rem;
    
    &:active {
      transform: scale(0.98);
    }
  }
  
  &:hover {
    text-shadow: 0 0 50px rgba(v.$color-primary, 0.5);
  }
}

.middleName {
  position: absolute;
  left: 15rem;
  top: 7.5rem;
  
  @include m.respond-to(mobile) {
    position: relative;
    left: auto;
    top: auto;
  }
}

.lastName {
  position: absolute;
  left: 34.5rem;
  top: 15rem;
  
  @include m.respond-to(mobile) {
    position: relative;
    left: auto;
    top: auto;
  }
}

.socialLinks {
  position: absolute;
  top: 35rem;
  left: 2rem;
  display: flex;
  gap: 1.5rem;
  z-index: 2;

  a {
    color: v.$color-text;
    font-size: 3rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    filter: drop-shadow(0 0 10px rgba(v.$color-primary, 0));

    &:hover {
      color: v.$color-primary;
      filter: drop-shadow(0 0 20px rgba(v.$color-primary, 0.5));
    }
  }

  @include m.respond-to(mobile) {
    position: fixed;
    bottom: 2rem;
    left: 0;
    right: 0;
    justify-content: center;
    gap: 2rem;
    padding: 1rem;
    backdrop-filter: blur(10px);
    background: rgba(0, 0, 0, 0.3);
    z-index: 10;

    a {
      font-size: 1.8rem;
      padding: 0.8rem;
      
      &:active {
        transform: scale(0.9);
      }
    }
  }
}

.ctaButtonsLeft {
  position: absolute;
  top: 42rem;
  left: 2rem;
  display: flex;
  gap: 1rem;
  z-index: 2;

  @include m.respond-to(mobile) {
    position: fixed;
    bottom: 5rem;
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    gap: 1rem;
    padding: 1rem;
    z-index: 10;

    button {
      min-width: 120px;
      padding: 0.8rem 1.2rem;
      font-size: 0.9rem;
      
      &:active {
        transform: scale(0.95);
      }
    }
  }
}

.sayHelloBtn, .downloadCvBtn {
  @include m.button-base;
  padding: 1rem 2.5rem;
  border-radius: 50px;
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 120%;
    height: 120%;
    background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 70%);
    transform: translate(-50%, -50%) scale(0);
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  &:hover::before {
    transform: translate(-50%, -50%) scale(1);
  }
}

.sayHelloBtn {
  background-color: v.$color-primary;
  color: v.$color-text;
  border: none;
  
  &:hover {
    background-color: color.adjust(v.$color-primary, $lightness: 5%);
  }
}

.downloadCvBtn {
  background-color: transparent;
  color: v.$color-text;
  border: 2px solid v.$color-text;
  backdrop-filter: blur(5px);
  
  &:hover {
    border-color: v.$color-primary;
    color: v.$color-primary;
  }
}

.customCursor {
  width: 20px;
  height: 20px;
  background: rgba(v.$color-primary, 0.5);
  border-radius: 50%;
  position: fixed;
  pointer-events: none;
  z-index: 9999;
  transition: transform 0.1s ease;
  backdrop-filter: blur(2px);
  mix-blend-mode: screen;

  &.cursorExpanded {
    transform: scale(1.5);
    background: rgba(v.$color-primary, 0.8);
  }
}

@media (hover: none) {
  .customCursor {
    display: none;
  }
  
  a, button {
    -webkit-tap-highlight-color: transparent;
  }
}

.skillsList {
  position: absolute;
  bottom: .5rem;
  right: 2rem;
  color: v.$color-text;
  font-family: v.$font-heading;
  font-size: 2rem;
  font-weight: bold;
  line-height: 1.1;
  text-align: right;
  z-index: 2;

  span {
    display: block;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: default;

    &:hover {
      text-shadow: 0 0 20px rgba(v.$color-primary, 0.5);
    }
  }

  @include m.respond-to(mobile) {
    position: relative;
    bottom: auto;
    left: 0;
    right: 0;
    text-align: center;
    font-size: 1rem;
    padding: 1rem;
    margin-top: 2rem;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.5rem;

    span {
      display: inline-block;
      margin: 0.25rem;
      padding: 0.5rem 1rem;
      background: rgba(v.$color-primary, 0.1);
      border-radius: 20px;
      font-size: 0.8rem;
      
      &:active {
        background: rgba(v.$color-primary, 0.2);
        transform: scale(0.95);
      }
    }
  }
}

.scrollIndicator {
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  z-index: 2;
  width: 30px;
  height: 50px;
  border: 2px solid rgba(v.$color-text, 0.3);
  border-radius: 15px;

  span {
    position: absolute;
    top: 8px;
    left: 50%;
    width: 6px;
    height: 6px;
    margin-left: -3px;
    background-color: v.$color-text;
    border-radius: 50%;
    animation: scrollAnimation 2s infinite;
  }

  @keyframes scrollAnimation {
    0% {
      transform: translateY(0);
      opacity: 1;
    }
    100% {
      transform: translateY(15px);
      opacity: 0;
    }
  }

  @include m.respond-to(mobile) {
    height: 40px;
    width: 20px;
    border-width: 1px;
    
    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      background: linear-gradient(
        to bottom,
        rgba(v.$color-primary, 0.2),
        transparent
      );
      animation: pulse 2s infinite;
    }
  }
}

@keyframes pulse {
  0% {
    opacity: 0;
    transform: translateY(0);
  }
  50% {
    opacity: 0.5;
    transform: translateY(10px);
  }
  100% {
    opacity: 0;
    transform: translateY(20px);
  }
}
